{"title":"Angular提交规范详解","uid":"8346f930f0602a19ad33cbd2e008a718","slug":"Angular提交规范详解","date":"2025-03-13T02:21:07.000Z","updated":"2025-03-26T06:48:07.330Z","comments":true,"path":"api/articles/Angular提交规范详解.json","keywords":null,"cover":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/images/Angular提交规范详解.png","content":"<h2 id=\"Angular-提交规范详解\"><a href=\"#Angular-提交规范详解\" class=\"headerlink\" title=\"Angular 提交规范详解\"></a>Angular 提交规范详解</h2><h3 id=\"一、是什么？\"><a href=\"#一、是什么？\" class=\"headerlink\" title=\"一、是什么？\"></a>一、是什么？</h3><p><strong>Angular 提交规范</strong>是指由 Angular 官方团队制定的提交规范，旨在统一 Angular 项目的提交信息，方便项目维护者和贡献者更好地管理项目。它是 Git Commit 规范的一种，学习并遵循 Angular 提交规范，可以有助于我们更好地管理项目，提高项目的质量和效率。</p>\n<h3 id=\"二、如何使用？\"><a href=\"#二、如何使用？\" class=\"headerlink\" title=\"二、如何使用？\"></a>二、如何使用？</h3><p>Angular 提交规范出处请参阅<a href=\"https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit-message-guidelines\">官方仓库说明</a>，以下是个人的理解说明：</p>\n<h4 id=\"1-提交格式\"><a href=\"#1-提交格式\" class=\"headerlink\" title=\"1. 提交格式\"></a>1. 提交格式</h4><p>每次提交，Commit message 都包括三个部分：<strong>Header</strong>、<strong>Body</strong> 和 <strong>Footer</strong>。其中，Header 是必需的，Body 和 Footer 可以省略。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class=\"line\">&lt;BLANK LINE&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;BLANK LINE&gt;</span><br><span class=\"line\">&lt;footer&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"2-Header\"><a href=\"#2-Header\" class=\"headerlink\" title=\"2. Header\"></a>2. Header</h4><p>Header 部分包括三个字段：<code>type</code>、<code>scope</code> 和 <code>subject</code>。</p>\n<ul>\n<li><code>type</code>：用于说明 commit 的类别，只允许使用下面 7 个标识：<ul>\n<li><code>feat</code>：新功能（feature）</li>\n<li><code>fix</code>：修复 bug</li>\n<li><code>docs</code>：文档（documentation）</li>\n<li><code>style</code>：格式（不影响代码运行的变动）</li>\n<li><code>refactor</code>：重构（即不是新增功能，也不是修改bug的代码变动）</li>\n<li><code>test</code>：增加测试</li>\n<li><code>chore</code>：构建过程或辅助工具的变动</li>\n</ul>\n</li>\n<li><code>scope</code>：用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</li>\n<li><code>subject</code>：是 commit 目的的简短描述，不超过 50 个字符。</li>\n</ul>\n<h4 id=\"3-Body\"><a href=\"#3-Body\" class=\"headerlink\" title=\"3. Body\"></a>3. Body</h4><p>Body 部分是对本次 commit 的详细描述，可以分为多行。</p>\n<p><em>注意：</em><br><em>- 使用第一人称现在时，比如使用change而不是changed或changes。</em><br><em>- Body 部分需要进行详细描述，说明代码变动的动机，以及与以前行为的对比。</em></p>\n<p>下面是一个范例：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">More detailed explanatory text, if necessary.  Wrap it to about 72</span><br><span class=\"line\">characters or so. </span><br><span class=\"line\"></span><br><span class=\"line\">- Bullet points are okay, too</span><br><span class=\"line\">- Use a hanging indent</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"4-Footer\"><a href=\"#4-Footer\" class=\"headerlink\" title=\"4. Footer\"></a>4. Footer</h4><p>Footer 部分只用于两种情况：</p>\n<ul>\n<li>不兼容变动</li>\n<li>关闭 Issue</li>\n</ul>\n<p>如果有，Footer 部分以 <code>BREAKING CHANGE</code> 开头，后面是对变动的描述、以及变动理由和迁移方法。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BREAKING CHANGE: &lt;breaking change description&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;breaking change explanation&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Closes #&lt;issue number&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"5-其他\"><a href=\"#5-其他\" class=\"headerlink\" title=\"5. 其他\"></a>5. 其他</h4><ul>\n<li>回滚（Revert）<ul>\n<li>如果当前 commit 用于回滚某个 commit，则必须以 <code>revert:</code> 开头，后面跟着被回滚的提交的 Header。</li>\n<li>正文中添加 <code>This reverts commit &lt;hash&gt;.</code>，其中 <code>&lt;hash&gt;</code> 是被回滚的提交的 SHA 标识符。</li>\n</ul>\n</li>\n<li>参考（Reference）<ul>\n<li>可以附加参考文献或链接。</li>\n<li>参考文献可以是任何格式，如 URL、文献标题、出版物名称等。</li>\n<li>参考文献应放在 Footer 部分，并以 <code>References</code> 开头。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"三、总结\"><a href=\"#三、总结\" class=\"headerlink\" title=\"三、总结\"></a>三、总结</h3><p>Angular 提交规范是 Git Commit 规范的一种，学习并遵循 Angular 提交规范，可以有助于我们更好地管理项目，提高项目的质量和效率。</p>\n<p>希望本文对您有所帮助，祝您学习与生活愉快！<span class=\"github-emoji\"><span>😘</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f618.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span><span class=\"github-emoji\"><span>✨</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span><span class=\"github-emoji\"><span>💖</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f496.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span></p>\n","text":"Angular 提交规范详解一、是什么？Angular 提交规范是指由 Angular 官方团队制定的提交规范，旨在统一 Angular 项目的提交信息，方便项...","permalink":"/post/Angular提交规范详解","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"工作","slug":"工作","count":8,"path":"api/categories/工作.json"}],"tags":[{"name":"教程","slug":"教程","count":5,"path":"api/tags/教程.json"},{"name":"技术","slug":"技术","count":5,"path":"api/tags/技术.json"},{"name":"Git Commit","slug":"Git-Commit","count":1,"path":"api/tags/Git-Commit.json"},{"name":"Angular","slug":"Angular","count":1,"path":"api/tags/Angular.json"},{"name":"规范","slug":"规范","count":1,"path":"api/tags/规范.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Angular-%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">Angular 提交规范详解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">一、是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%EF%BC%9F\"><span class=\"toc-text\">二、如何使用？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%8F%90%E4%BA%A4%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">1. 提交格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-Header\"><span class=\"toc-text\">2. Header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-Body\"><span class=\"toc-text\">3. Body</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-Footer\"><span class=\"toc-text\">4. Footer</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">5. 其他</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">三、总结</span></a></li></ol></li></ol>","author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/images/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"CSS基础之flex与grid","uid":"987ff382f564c4b94267c479b9b8fe41","slug":"CSS基础之flex与grid","date":"2025-03-14T15:21:01.000Z","updated":"2025-03-20T14:30:26.016Z","comments":true,"path":"api/articles/CSS基础之flex与grid.json","keywords":null,"cover":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/images/cover-stars.jpg","text":"更新中……敬请期待…… ","permalink":"/post/CSS基础之flex与grid","photos":[],"count_time":{"symbolsCount":12,"symbolsTime":"1 mins."},"categories":[{"name":"工作","slug":"工作","count":8,"path":"api/categories/工作.json"}],"tags":[{"name":"CSS","slug":"CSS","count":2,"path":"api/tags/CSS.json"},{"name":"flex","slug":"flex","count":1,"path":"api/tags/flex.json"},{"name":"grid","slug":"grid","count":1,"path":"api/tags/grid.json"},{"name":"教程","slug":"教程","count":5,"path":"api/tags/教程.json"},{"name":"前端","slug":"前端","count":3,"path":"api/tags/前端.json"}],"author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/images/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"初创博客所感","uid":"3324aff7d1b50911304aa0367fc3a2fa","slug":"初创博客所感","date":"2025-03-06T12:08:21.000Z","updated":"2025-03-06T15:04:38.637Z","comments":true,"path":"api/articles/初创博客所感.json","keywords":null,"cover":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/images/cover-stars.jpg","text":"从大学想到性格又想到WEB还有未来的发展最后扣题想了博客，瞎扯了很多。愿我能将这份热情与感慨留得久一点，跟随自我，不负初心…… 虽然实际建站（搭建+配置主题+部...","permalink":"/post/初创博客所感","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"生活","slug":"生活","count":2,"path":"api/categories/生活.json"}],"tags":[{"name":"随笔","slug":"随笔","count":3,"path":"api/tags/随笔.json"}],"author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/images/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}