{"title":"力扣周记-4","uid":"29ce0c84bae936ed46a856aec05cb9ef","slug":"leetcode-weekly-journal-4","date":"2025-09-23T14:39:40.000Z","updated":"2025-10-02T02:21:44.688Z","comments":true,"path":"api/articles/leetcode-weekly-journal-4.json","keywords":null,"cover":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/cover-leetcode.png","content":"<h1 id=\"力扣周记-4\"><a href=\"#力扣周记-4\" class=\"headerlink\" title=\"力扣周记-4\"></a>力扣周记-4</h1><p>2025.9.29 - 2025.10.5</p>\n<h2 id=\"一、回文链表-234\"><a href=\"#一、回文链表-234\" class=\"headerlink\" title=\"一、回文链表(234)\"></a>一、回文链表(234)</h2><h3 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h3><ul>\n<li>栈</li>\n<li>递归</li>\n<li>链表</li>\n<li>双指针</li>\n</ul>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><h3 id=\"我的答案\"><a href=\"#我的答案\" class=\"headerlink\" title=\"我的答案\"></a>我的答案</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val, next) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = (next===undefined ? null : next)</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">head</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> {<span class=\"type\">boolean</span>}</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isPalindrome = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> values = [];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (head) {</span><br><span class=\"line\">    values.<span class=\"title function_\">push</span>(head.<span class=\"property\">val</span>);</span><br><span class=\"line\">    head = head.<span class=\"property\">next</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">var</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> right = values.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (left &lt;= right) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (values[left] !== values[right]) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    left++;</span><br><span class=\"line\">    right--;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h3><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><h2 id=\"二、环形链表-141\"><a href=\"#二、环形链表-141\" class=\"headerlink\" title=\"二、环形链表(141)\"></a>二、环形链表(141)</h2><h3 id=\"标签-1\"><a href=\"#标签-1\" class=\"headerlink\" title=\"标签\"></a>标签</h3><ul>\n<li>链表</li>\n<li>双指针</li>\n</ul>\n<h3 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><h3 id=\"我的答案-1\"><a href=\"#我的答案-1\" class=\"headerlink\" title=\"我的答案\"></a>我的答案</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">head</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> {<span class=\"type\">boolean</span>}</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hasCycle = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fast = head;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> slow = head;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!slow || !fast) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">    fast = fast.<span class=\"property\">next</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!fast) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    fast = fast.<span class=\"property\">next</span>;</span><br><span class=\"line\">  } <span class=\"keyword\">while</span> (slow !== fast);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"题解-1\"><a href=\"#题解-1\" class=\"headerlink\" title=\"题解\"></a>题解</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">head</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> {<span class=\"type\">boolean</span>}</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hasCycle = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> slow = head;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> fast = head;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (fast &amp;&amp; fast.<span class=\"property\">next</span> &amp;&amp; fast.<span class=\"property\">next</span>.<span class=\"property\">next</span>) {</span><br><span class=\"line\">    slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">    fast = fast.<span class=\"property\">next</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (slow === fast) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><h2 id=\"三、环形链表-II-142\"><a href=\"#三、环形链表-II-142\" class=\"headerlink\" title=\"三、环形链表 II(142)\"></a>三、环形链表 II(142)</h2><h3 id=\"标签-2\"><a href=\"#标签-2\" class=\"headerlink\" title=\"标签\"></a>标签</h3><ul>\n<li>链表</li>\n<li>双指针</li>\n</ul>\n<h3 id=\"题目描述-2\"><a href=\"#题目描述-2\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><h3 id=\"我的答案-2\"><a href=\"#我的答案-2\" class=\"headerlink\" title=\"我的答案\"></a>我的答案</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">head</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> {<span class=\"type\">ListNode</span>}</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> detectCycle = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fast = head;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> slow = head;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!slow || !fast) <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">    fast = fast.<span class=\"property\">next</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!fast) <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    fast = fast.<span class=\"property\">next</span>;</span><br><span class=\"line\">  } <span class=\"keyword\">while</span> (slow !== fast);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> ptr = head;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (slow !== ptr) {</span><br><span class=\"line\">    slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">    ptr = ptr.<span class=\"property\">next</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ptr;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"题解-2\"><a href=\"#题解-2\" class=\"headerlink\" title=\"题解\"></a>题解</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> detectCycle = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (head === <span class=\"literal\">null</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">let</span> slow = head,</span><br><span class=\"line\">    fast = head;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (fast !== <span class=\"literal\">null</span>) {</span><br><span class=\"line\">    slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fast.<span class=\"property\">next</span> !== <span class=\"literal\">null</span>) {</span><br><span class=\"line\">      fast = fast.<span class=\"property\">next</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fast === slow) {</span><br><span class=\"line\">      <span class=\"keyword\">let</span> ptr = head;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (ptr !== slow) {</span><br><span class=\"line\">        ptr = ptr.<span class=\"property\">next</span>;</span><br><span class=\"line\">        slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">      }</span><br><span class=\"line\">      <span class=\"keyword\">return</span> ptr;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<p>我们使用两个指针，<code>fast</code> 与 <code>slow</code>。它们起始都位于链表的头部。随后，<code>slow</code> 指针每次向后移动一个位置，而 <code>fast</code> 指针向后移动两个位置。如果链表中存在环，则 <code>fast</code> 指针最终将再次与 <code>slow</code> 指针在环中相遇。</p>\n<p>如下图所示，设链表中环外部分的长度为 <code>a</code>。<code>slow</code> 指针进入环后，又走了 <code>b</code> 的距离与 <code>fast</code> 相遇。此时，<code>fast</code> 指针已经走完了环的 <code>n</code> 圈，因此它走过的总距离为 <code>a+n(b+c)+b=a+(n+1)b+nc</code>。</p>\n<p><img src=\"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/leetcode-weekly-journal-4/1.png\" alt=\"环形链表\"></p>\n<p>根据题意，任意时刻，<code>fast</code> 指针走过的距离都为 <code>slow</code> 指针的 <code>2</code> 倍。因此，我们有<code>a+(n+1)b+nc=2(a+b)⟹a=c+(n−1)(b+c)</code>。</p>\n<p>有了 <code>a=c+(n−1)(b+c)</code> 的等量关系，我们会发现：从相遇点到入环点的距离加上 <code>n−1</code> 圈的环长，恰好等于从链表头部到入环点的距离。</p>\n<p>因此，当发现 <code>slow</code> 与 <code>fast</code> 相遇时，我们再额外使用一个指针 <code>ptr</code>。起始，它指向链表头部；随后，它和 <code>slow</code> 每次向后移动一个位置。最终，它们会在入环点相遇。</p>\n<h3 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h3><h2 id=\"四、合并两个有序链表-21\"><a href=\"#四、合并两个有序链表-21\" class=\"headerlink\" title=\"四、合并两个有序链表(21)\"></a>四、合并两个有序链表(21)</h2><h3 id=\"标签-3\"><a href=\"#标签-3\" class=\"headerlink\" title=\"标签\"></a>标签</h3><p>递归<br>链表</p>\n<h3 id=\"题目描述-3\"><a href=\"#题目描述-3\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>将两个升序链表合并为一个新的 <strong>升序</strong> 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。</p>\n<p>示例 1：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>l1 = [1,2,4], l2 = [1,3,4]</code><br>输出：<code>[1,1,2,3,4,4]</code></p></blockquote>\n<p>示例 2：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>l1 = [], l2 = []</code><br>输出：<code>[]</code></p></blockquote>\n<p>示例 3：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>l1 = [], l2 = [0]</code><br>输出：<code>[0]</code></p></blockquote>\n<h3 id=\"我的答案-3\"><a href=\"#我的答案-3\" class=\"headerlink\" title=\"我的答案\"></a>我的答案</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val, next) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = (next===undefined ? null : next)</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">list1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">list2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> {<span class=\"type\">ListNode</span>}</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mergeTwoLists = <span class=\"keyword\">function</span> (<span class=\"params\">list1, list2</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> list3 = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> head = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!list1) <span class=\"keyword\">return</span> list2;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!list2) <span class=\"keyword\">return</span> list1;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (list1.<span class=\"property\">val</span> &gt; list2.<span class=\"property\">val</span>) {</span><br><span class=\"line\">    list3 = list2;</span><br><span class=\"line\">    head = list3;</span><br><span class=\"line\">    list2 = list2.<span class=\"property\">next</span>;</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    list3 = list1;</span><br><span class=\"line\">    head = list3;</span><br><span class=\"line\">    list1 = list1.<span class=\"property\">next</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (list1 &amp;&amp; list2) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (list1.<span class=\"property\">val</span> &gt; list2.<span class=\"property\">val</span>) {</span><br><span class=\"line\">      list3.<span class=\"property\">next</span> = list2;</span><br><span class=\"line\">      list3 = list3.<span class=\"property\">next</span>;</span><br><span class=\"line\">      list2 = list2.<span class=\"property\">next</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      list3.<span class=\"property\">next</span> = list1;</span><br><span class=\"line\">      list3 = list3.<span class=\"property\">next</span>;</span><br><span class=\"line\">      list1 = list1.<span class=\"property\">next</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (list1) {</span><br><span class=\"line\">    list3.<span class=\"property\">next</span> = list1;</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    list3.<span class=\"property\">next</span> = list2;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"题解-3\"><a href=\"#题解-3\" class=\"headerlink\" title=\"题解\"></a>题解</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 递归</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mergeTwoLists = <span class=\"keyword\">function</span> (<span class=\"params\">l1, l2</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (l1 === <span class=\"literal\">null</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> l2;</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (l2 === <span class=\"literal\">null</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> l1;</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (l1.<span class=\"property\">val</span> &lt; l2.<span class=\"property\">val</span>) {</span><br><span class=\"line\">    l1.<span class=\"property\">next</span> = <span class=\"title function_\">mergeTwoLists</span>(l1.<span class=\"property\">next</span>, l2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> l1;</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    l2.<span class=\"property\">next</span> = <span class=\"title function_\">mergeTwoLists</span>(l1, l2.<span class=\"property\">next</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> l2;</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br><span class=\"line\"><span class=\"comment\">// 迭代</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mergeTwoLists = <span class=\"keyword\">function</span> (<span class=\"params\">l1, l2</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> prehead = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(-<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> prev = prehead;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (l1 != <span class=\"literal\">null</span> &amp;&amp; l2 != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l1.<span class=\"property\">val</span> &lt;= l2.<span class=\"property\">val</span>) {</span><br><span class=\"line\">      prev.<span class=\"property\">next</span> = l1;</span><br><span class=\"line\">      l1 = l1.<span class=\"property\">next</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      prev.<span class=\"property\">next</span> = l2;</span><br><span class=\"line\">      l2 = l2.<span class=\"property\">next</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    prev = prev.<span class=\"property\">next</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 合并后 l1 和 l2 最多只有一个还未被合并完，我们直接将链表末尾指向未合并完的链表即可</span></span><br><span class=\"line\">  prev.<span class=\"property\">next</span> = l1 === <span class=\"literal\">null</span> ? l2 : l1;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> prehead.<span class=\"property\">next</span>;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"总结-3\"><a href=\"#总结-3\" class=\"headerlink\" title=\"总结\"></a>总结</h3><h2 id=\"五、在排序数组中查找元素的第一个和最后一个位置-34\"><a href=\"#五、在排序数组中查找元素的第一个和最后一个位置-34\" class=\"headerlink\" title=\"五、在排序数组中查找元素的第一个和最后一个位置(34)\"></a>五、在排序数组中查找元素的第一个和最后一个位置(34)</h2><h3 id=\"标签-4\"><a href=\"#标签-4\" class=\"headerlink\" title=\"标签\"></a>标签</h3><ul>\n<li>数组</li>\n<li>二分查找</li>\n</ul>\n<h3 id=\"题目描述-4\"><a href=\"#题目描述-4\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>给你一个按照非递减顺序排列的整数数组 <code>nums</code>，和一个目标值 <code>target</code>。请你找出给定目标值在数组中的开始位置和结束位置。</p>\n<p>如果数组中不存在目标值 <code>target</code>，返回 <code>[-1, -1]</code>。</p>\n<p>你必须设计并实现时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p>\n<p>示例 1：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>nums = [5,7,7,8,8,10], target = 8</code><br>输出：<code>[3,4]</code></p></blockquote>\n<p>示例 2：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>nums = [5,7,7,8,8,10], target = 6</code><br>输出：<code>[-1,-1]</code></p></blockquote>\n<p>示例 3：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>nums = [], target = 0</code><br>输出：<code>[-1,-1]</code></p></blockquote>\n<h3 id=\"我的答案-4\"><a href=\"#我的答案-4\" class=\"headerlink\" title=\"我的答案\"></a>我的答案</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">number[]</span>} <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">number</span>} <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> {<span class=\"type\">number[]</span>}</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRange = <span class=\"keyword\">function</span> (<span class=\"params\">nums, target</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> left = <span class=\"number\">0</span>,</span><br><span class=\"line\">    right = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> index = -<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> r1 = <span class=\"number\">0</span>,</span><br><span class=\"line\">    r2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (left &lt;= right) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> mid = left + <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((right - left) / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[mid] &lt; target) {</span><br><span class=\"line\">      left = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[mid] &gt; target) {</span><br><span class=\"line\">      right = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      index = mid;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (index === -<span class=\"number\">1</span>) <span class=\"keyword\">return</span> [-<span class=\"number\">1</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = index - <span class=\"number\">1</span>,</span><br><span class=\"line\">      j = index + <span class=\"number\">1</span>;</span><br><span class=\"line\">    (r1 = index), (r2 = index);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (nums[i] === nums[index]) {</span><br><span class=\"line\">      r1 = i;</span><br><span class=\"line\">      i--;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (nums[j] === nums[index]) {</span><br><span class=\"line\">      r2 = j;</span><br><span class=\"line\">      j++;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [r1, r2];</span><br><span class=\"line\">  }</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"题解-4\"><a href=\"#题解-4\" class=\"headerlink\" title=\"题解\"></a>题解</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">binarySearch</span> = (<span class=\"params\">nums, target, lower</span>) =&gt; {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> left = <span class=\"number\">0</span>,</span><br><span class=\"line\">    right = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>,</span><br><span class=\"line\">    ans = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (left &lt;= right) {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right) / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[mid] &gt; target || (lower &amp;&amp; nums[mid] &gt;= target)) {</span><br><span class=\"line\">      right = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">      ans = mid;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      left = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRange = <span class=\"keyword\">function</span> (<span class=\"params\">nums, target</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> ans = [-<span class=\"number\">1</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> leftIdx = <span class=\"title function_\">binarySearch</span>(nums, target, <span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> rightIdx = <span class=\"title function_\">binarySearch</span>(nums, target, <span class=\"literal\">false</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (</span><br><span class=\"line\">    leftIdx &lt;= rightIdx &amp;&amp;</span><br><span class=\"line\">    rightIdx &lt; nums.<span class=\"property\">length</span> &amp;&amp;</span><br><span class=\"line\">    nums[leftIdx] === target &amp;&amp;</span><br><span class=\"line\">    nums[rightIdx] === target</span><br><span class=\"line\">  ) {</span><br><span class=\"line\">    ans = [leftIdx, rightIdx];</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"总结-4\"><a href=\"#总结-4\" class=\"headerlink\" title=\"总结\"></a>总结</h3><h2 id=\"六、两数相加-2\"><a href=\"#六、两数相加-2\" class=\"headerlink\" title=\"六、两数相加(2)\"></a>六、两数相加(2)</h2><h3 id=\"标签-5\"><a href=\"#标签-5\" class=\"headerlink\" title=\"标签\"></a>标签</h3><ul>\n<li>链表</li>\n<li>数学</li>\n<li>递归</li>\n</ul>\n<h3 id=\"题目描述-5\"><a href=\"#题目描述-5\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>给你两个 <strong>非空</strong> 的链表，表示两个非负的整数。它们每位数字都是按照 <strong>逆序</strong> 的方式存储的，并且每个节点只能存储 <strong>一位</strong> 数字。</p>\n<p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p>\n<p>你可以假设除了数字 <code>0</code> 之外，这两个数都不会以 <code>0</code> 开头。</p>\n<p>示例 1：</p>\n<p><img src=\"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/leetcode-weekly-journal-4/2.png\" alt=\"两数相加\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>l1 = [2,4,3], l2 = [5,6,4]</code><br>输出：<code>[7,0,8]</code><br>解释：<code>342 + 465 = 807</code>.</p></blockquote>\n<p>示例 2：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>l1 = [0], l2 = [0]</code><br>输出：<code>[0]</code></p></blockquote>\n<p>示例 3：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：<code>l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</code><br>输出：<code>[8,9,9,9,0,0,0,1]</code></p></blockquote>\n<p>提示：</p>\n<ul>\n<li>每个链表中的节点数在范围 <code>[1, 100]</code> 内</li>\n<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n<li>题目数据保证列表表示的数字不含前导零</li>\n</ul>\n<h3 id=\"我的答案-5\"><a href=\"#我的答案-5\" class=\"headerlink\" title=\"我的答案\"></a>我的答案</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初版设想，但是长链表会溢出且时间复杂度为O(n方)。</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val, next) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = (next===undefined ? null : next)</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">l1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">l2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> {<span class=\"type\">ListNode</span>}</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> addTwoNumbers = <span class=\"keyword\">function</span> (<span class=\"params\">l1, l2</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">var</span> n1 = <span class=\"number\">0</span>,</span><br><span class=\"line\">    n2 = <span class=\"number\">0</span>,</span><br><span class=\"line\">    n3 = <span class=\"number\">0</span>,</span><br><span class=\"line\">    t1 = <span class=\"number\">1</span>,</span><br><span class=\"line\">    t2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (l1) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> value = l1.<span class=\"property\">val</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; t1; i++) {</span><br><span class=\"line\">      value = value * <span class=\"number\">10</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    t1++;</span><br><span class=\"line\">    n1 = n1 + value;</span><br><span class=\"line\">    l1 = l1.<span class=\"property\">next</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (l2) {</span><br><span class=\"line\">    <span class=\"keyword\">var</span> value = l2.<span class=\"property\">val</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; t2; i++) {</span><br><span class=\"line\">      value = value * <span class=\"number\">10</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    t2++;</span><br><span class=\"line\">    n2 = n2 + value;</span><br><span class=\"line\">    l2 = l2.<span class=\"property\">next</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  n3 = n1 + n2;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> head = <span class=\"literal\">null</span>,</span><br><span class=\"line\">    curr = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n3 === <span class=\"number\">0</span>) {</span><br><span class=\"line\">    curr.<span class=\"property\">val</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> curr;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (n3) {</span><br><span class=\"line\">    curr.<span class=\"property\">next</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>();</span><br><span class=\"line\">    curr = curr.<span class=\"property\">next</span>;</span><br><span class=\"line\">    curr.<span class=\"property\">val</span> = n3 % <span class=\"number\">10</span>;</span><br><span class=\"line\">    n3 = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(n3 / <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head === <span class=\"literal\">null</span>) head = curr;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 改进版本，使用字符串模拟运算</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val, next) {</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = (next===undefined ? null : next)</span></span><br><span class=\"line\"><span class=\"comment\"> * }</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">l1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> {<span class=\"type\">ListNode</span>} <span class=\"variable\">l2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> {<span class=\"type\">ListNode</span>}</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> addTwoNumbers = <span class=\"keyword\">function</span> (<span class=\"params\">l1, l2</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">node1, node2, carry, prev</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!node1 &amp;&amp; !node2 &amp;&amp; carry === <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> val1 = node1 ? node1.<span class=\"property\">val</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> val2 = node2 ? node2.<span class=\"property\">val</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = val1 + val2 + carry;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> newNode = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(sum % <span class=\"number\">10</span>);</span><br><span class=\"line\">    prev.<span class=\"property\">next</span> = newNode;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">add</span>(</span><br><span class=\"line\">      node1 ? node1.<span class=\"property\">next</span> : <span class=\"literal\">null</span>,</span><br><span class=\"line\">      node2 ? node2.<span class=\"property\">next</span> : <span class=\"literal\">null</span>,</span><br><span class=\"line\">      <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(sum / <span class=\"number\">10</span>),</span><br><span class=\"line\">      newNode</span><br><span class=\"line\">    );</span><br><span class=\"line\">  }</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dummyHead = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>();</span><br><span class=\"line\">  <span class=\"title function_\">add</span>(l1, l2, <span class=\"number\">0</span>, dummyHead);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dummyHead.<span class=\"property\">next</span>;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"题解-5\"><a href=\"#题解-5\" class=\"headerlink\" title=\"题解\"></a>题解</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> addTwoNumbers = <span class=\"keyword\">function</span> (<span class=\"params\">l1, l2</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> head = <span class=\"literal\">null</span>,</span><br><span class=\"line\">    tail = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> carry = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (l1 || l2) {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> n1 = l1 ? l1.<span class=\"property\">val</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> n2 = l2 ? l2.<span class=\"property\">val</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sum = n1 + n2 + carry;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!head) {</span><br><span class=\"line\">      head = tail = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(sum % <span class=\"number\">10</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      tail.<span class=\"property\">next</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(sum % <span class=\"number\">10</span>);</span><br><span class=\"line\">      tail = tail.<span class=\"property\">next</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    carry = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(sum / <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l1) {</span><br><span class=\"line\">      l1 = l1.<span class=\"property\">next</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l2) {</span><br><span class=\"line\">      l2 = l2.<span class=\"property\">next</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (carry &gt; <span class=\"number\">0</span>) {</span><br><span class=\"line\">    tail.<span class=\"property\">next</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(carry);</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">};</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"总结-5\"><a href=\"#总结-5\" class=\"headerlink\" title=\"总结\"></a>总结</h3>","text":"力扣周记-42025.9.29 - 2025.10.5 一、回文链表(234)标签 栈 递归 链表 双指针 题目描述我的答案123456789101112131...","permalink":"/post/leetcode-weekly-journal-4","photos":[],"count_time":{"symbolsCount":"9.9k","symbolsTime":"9 mins."},"categories":[{"name":"算法题","slug":"算法题","count":4,"path":"api/categories/算法题.json"}],"tags":[{"name":"笔记","slug":"笔记","count":15,"path":"api/tags/笔记.json"},{"name":"力扣","slug":"力扣","count":4,"path":"api/tags/力扣.json"},{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8A%9B%E6%89%A3%E5%91%A8%E8%AE%B0-4\"><span class=\"toc-text\">力扣周记-4</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8-234\"><span class=\"toc-text\">一、回文链表(234)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E7%AD%94%E6%A1%88\"><span class=\"toc-text\">我的答案</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3\"><span class=\"toc-text\">题解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-141\"><span class=\"toc-text\">二、环形链表(141)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%87%E7%AD%BE-1\"><span class=\"toc-text\">标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-1\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E7%AD%94%E6%A1%88-1\"><span class=\"toc-text\">我的答案</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3-1\"><span class=\"toc-text\">题解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-1\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-II-142\"><span class=\"toc-text\">三、环形链表 II(142)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%87%E7%AD%BE-2\"><span class=\"toc-text\">标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-2\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E7%AD%94%E6%A1%88-2\"><span class=\"toc-text\">我的答案</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3-2\"><span class=\"toc-text\">题解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-2\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8-21\"><span class=\"toc-text\">四、合并两个有序链表(21)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%87%E7%AD%BE-3\"><span class=\"toc-text\">标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-3\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E7%AD%94%E6%A1%88-3\"><span class=\"toc-text\">我的答案</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3-3\"><span class=\"toc-text\">题解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-3\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE-34\"><span class=\"toc-text\">五、在排序数组中查找元素的第一个和最后一个位置(34)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%87%E7%AD%BE-4\"><span class=\"toc-text\">标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-4\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E7%AD%94%E6%A1%88-4\"><span class=\"toc-text\">我的答案</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3-4\"><span class=\"toc-text\">题解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-4\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0-2\"><span class=\"toc-text\">六、两数相加(2)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%87%E7%AD%BE-5\"><span class=\"toc-text\">标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-5\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E7%AD%94%E6%A1%88-5\"><span class=\"toc-text\">我的答案</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3-5\"><span class=\"toc-text\">题解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-5\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol></li></ol>","author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"OurEDA 24级 Web 方向学习指导","uid":"2bc4488fd1803f145853cb3056e5286f","slug":"oureda-24-web-guide","date":"2025-10-14T02:01:59.000Z","updated":"2025-10-14T09:12:09.771Z","comments":true,"path":"api/articles/oureda-24-web-guide.json","keywords":null,"cover":null,"text":"OurEDA 24级 Web 方向学习指导一、前言与总结上次的答辩完成度都比较高，但是对于项目细节的理解都远远不够（无论是前端还是后端）。典型例子就是“你为什么...","permalink":"/post/oureda-24-web-guide","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"工作","slug":"工作","count":8,"path":"api/categories/工作.json"}],"tags":[{"name":"OurEDA","slug":"OurEDA","count":1,"path":"api/tags/OurEDA.json"},{"name":"Web","slug":"Web","count":2,"path":"api/tags/Web.json"},{"name":"学习指导","slug":"学习指导","count":1,"path":"api/tags/学习指导.json"}],"author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"力扣周记-3","uid":"fa243605ec3719de63f54a5b0235764f","slug":"leetcode-weekly-journal-3","date":"2025-09-23T14:39:38.000Z","updated":"2025-10-02T02:27:45.577Z","comments":true,"path":"api/articles/leetcode-weekly-journal-3.json","keywords":null,"cover":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/cover-leetcode.png","text":"力扣周记-32025.9.22 - 2025.9.28 一、比较版本号(165)标签 字符串 双指针 题目描述给你两个 版本号字符串 version1 和 ve...","permalink":"/post/leetcode-weekly-journal-3","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"算法题","slug":"算法题","count":4,"path":"api/categories/算法题.json"}],"tags":[{"name":"笔记","slug":"笔记","count":15,"path":"api/tags/笔记.json"},{"name":"力扣","slug":"力扣","count":4,"path":"api/tags/力扣.json"},{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}