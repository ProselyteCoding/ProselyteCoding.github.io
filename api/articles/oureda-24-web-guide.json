{"title":"OurEDA 24级 Web 方向学习指导","uid":"2bc4488fd1803f145853cb3056e5286f","slug":"oureda-24-web-guide","date":"2025-10-14T02:01:59.000Z","updated":"2025-10-15T09:36:59.094Z","comments":true,"path":"api/articles/oureda-24-web-guide.json","keywords":null,"cover":null,"content":"<h1 id=\"OurEDA-24级-Web-方向学习指导\"><a href=\"#OurEDA-24级-Web-方向学习指导\" class=\"headerlink\" title=\"OurEDA 24级 Web 方向学习指导\"></a>OurEDA 24级 Web 方向学习指导</h1><h2 id=\"一、前言与总结\"><a href=\"#一、前言与总结\" class=\"headerlink\" title=\"一、前言与总结\"></a>一、前言与总结</h2><p>上次的答辩完成度都比较高，但是<strong>对于项目细节的理解都远远不够</strong>（无论是前端还是后端）。典型例子就是“你为什么要用这个技术栈？它的原理是什么？”然后回答“AI告诉我的，原因不清楚或忘了”。</p>\n<p>对于想<strong>进一步了解 Web开发、提升开发水平</strong>的同学，建议你参照本文给出的方向进行学习并完成后面的检测练习，最终我们将进行以<strong>交流学习</strong>为目的的答辩，供查缺补漏和扩展视野。</p>\n<p><em>此文档为24级大二上学期的学习任务，作业答辩将于下学期开学初开展。</em></p>\n<h2 id=\"二、学习方向\"><a href=\"#二、学习方向\" class=\"headerlink\" title=\"二、学习方向\"></a>二、学习方向</h2><h3 id=\"1-前端\"><a href=\"#1-前端\" class=\"headerlink\" title=\"1. 前端\"></a>1. 前端</h3><p>前端的入门门槛较低，不了解的人也容易将前端局限在做几个好看的页面上，殊不知前端技术栈已经发展得非常庞大和复杂，涉及的知识面也非常广泛。前端开发不再是单纯的页面开发，而是涵盖了从用户界面设计（真实生产中是在UI的设计稿基础上设计逻辑）、交互体验优化到性能调优、跨平台适配等多个方面。在与后端的“小黑框”交互前，前端也是安全保障的第一道防线、是部分数据计算、逻辑处理的第一战场。</p>\n<p>用前端反馈较强的优势去激发自己持续学习、追求极致的动力，才能在这个领域走得更远，而不只是成为最基础的“切图仔”。</p>\n<h4 id=\"身份认证\"><a href=\"#身份认证\" class=\"headerlink\" title=\"身份认证\"></a>身份认证</h4><p>上次作业的 Todolist 项目中，对于登录、注册、保卫路由的理解还不够深入，问到如何实现记住登录状态、如何防止未登录用户访问受保护路由等问题时，回答都比较模糊。</p>\n<ul>\n<li>深入学习 JWT（JSON Web Token）的原理和使用方法。</li>\n<li>掌握常用的 Token 存储方式实现及其优缺点（实现并说出采用这种方案的理由）。</li>\n<li>封装保卫路由组件，确保只有经过身份验证的用户才能访问受保护的路由。</li>\n</ul>\n<h4 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h4><ul>\n<li>了解前端性能优化的基本概念和常用方法，如代码分割、懒加载、缓存等。</li>\n<li>学习如何使用浏览器开发者工具进行性能分析和调试。</li>\n<li>学习前端对于图像、视频等大文件的优化方法。</li>\n<li>学习前端对于图标字体等资源的优化方法。</li>\n</ul>\n<h4 id=\"状态管理\"><a href=\"#状态管理\" class=\"headerlink\" title=\"状态管理\"></a>状态管理</h4><ul>\n<li>学习 Redux、Zustand 或其他状态管理库的基本概念和使用方法。</li>\n<li>深入理解 useState、useReducer、useContext 等 React 内置状态管理方法的原理、区别和适用场景。</li>\n<li>学习如何设计和组织应用的状态结构，确保状态的可维护性和可扩展性。</li>\n</ul>\n<h4 id=\"封装设计\"><a href=\"#封装设计\" class=\"headerlink\" title=\"封装设计\"></a>封装设计</h4><ul>\n<li>学习如何封装可复用的组件和模块，提高代码的可维护性和可扩展性。</li>\n<li>学习如何设计和实现自定义 Hook，提高代码的复用性和可读性。</li>\n<li>学习如何封装工具函数与 API 请求，要求实现一个 Axios 的请求封装。</li>\n</ul>\n<h4 id=\"响应式与多端\"><a href=\"#响应式与多端\" class=\"headerlink\" title=\"响应式与多端\"></a>响应式与多端</h4><ul>\n<li>学习响应式设计的基本概念和实现方法，辨析前端尺寸单位并掌握其换算原理、会根据情况使用合适的单位。</li>\n<li>学习微信小程序端、手机移动端（APP）、桌面端应用的实现方式或跨端实现方案，了解 微信原生（WXML、WXSS）、React Native、Taro、Electron/Tauri 等技术栈的基本概念和使用方法。</li>\n<li>掌握上述技术栈中的一种，并实现一个简单的多端应用或了解偏向于 Vue 栈的 Uni-app。（进阶要求）</li>\n</ul>\n<h4 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h4><p>前端开发也不能完全不了解后端，至少应该掌握 Node 的基本概念和使用方法，能使用 Express 搭建简单的后端。</p>\n<ul>\n<li>学习 Node.js 的基本概念和使用方法，了解其事件驱动和非阻塞 I/O 模型。</li>\n<li>学习 Express 框架的基本概念和使用方法，掌握路由、中间件、请求处理等基本功能。</li>\n<li>学习如何使用 Express 搭建一个简单的 RESTful API 服务，要求实现增删改查功能。</li>\n</ul>\n<h3 id=\"2-后端\"><a href=\"#2-后端\" class=\"headerlink\" title=\"2. 后端\"></a>2. 后端</h3><p>答辩时，大家的后端回答基本都是“AI的杰作”，也鲜有同学能提供清晰的API文档或相关说明文件。总体而言，后端掌握情况不如前端。后端可能没有前端那样直观的成就感，甚至有些“枯燥”，但在幕后运筹帷幄、构建系统逻辑核心，不失为一种浪漫。</p>\n<h4 id=\"基础概念理解\"><a href=\"#基础概念理解\" class=\"headerlink\" title=\"基础概念理解\"></a>基础概念理解</h4><ul>\n<li>理解客户端-服务器架构的基本原理和请求-响应模型</li>\n<li>掌握RESTful API设计原则和规范</li>\n<li>学习HTTP协议基础知识：常用状态码（如200, 404, 500）、请求方法（GET/POST/PUT/DELETE）、头部信息等。</li>\n</ul>\n<h4 id=\"数据库基础\"><a href=\"#数据库基础\" class=\"headerlink\" title=\"数据库基础\"></a>数据库基础</h4><p>大二会有一门数据库的必修课，同学们认真了解一下</p>\n<ul>\n<li>学习关系型数据库（MySQL等）的基本概念：表、字段、主键、外键等</li>\n<li>掌握基本的SQL语句：SELECT、INSERT、UPDATE、DELETE，可以尝试写比较复杂的语句</li>\n<li>了解如何根据项目需求设计合理的数据库表结构，建立对数据库三大范式的初步认识。</li>\n<li>学有余力可以再了解一下redis等</li>\n</ul>\n<h4 id=\"服务器框架与开发\"><a href=\"#服务器框架与开发\" class=\"headerlink\" title=\"服务器框架与开发\"></a>服务器框架与开发</h4><ul>\n<li>大二上至少掌握 <strong>SpringBoot</strong> 框架，能快速搭建 RESTful API，这一框架在产业界被广泛使用。</li>\n<li>拓展了解 Redis ElasticSearch RocketMQ kafka 等中间件。</li>\n</ul>\n<h4 id=\"接口设计与实现\"><a href=\"#接口设计与实现\" class=\"headerlink\" title=\"接口设计与实现\"></a>接口设计与实现</h4><ul>\n<li>学习设计合理的API端点URL和返回数据结构</li>\n<li>学习请求参数验证和错误处理</li>\n<li>掌握分页、排序、过滤等常见功能的实现</li>\n</ul>\n<h4 id=\"安全基础\"><a href=\"#安全基础\" class=\"headerlink\" title=\"安全基础\"></a>安全基础</h4><ul>\n<li>了解常见的Web安全威胁：SQL注入、XSS、CSRF等</li>\n<li>学习基础的安全防护措施</li>\n<li>学习基于角色的基础访问控制</li>\n</ul>\n<h4 id=\"调试能力\"><a href=\"#调试能力\" class=\"headerlink\" title=\"调试能力\"></a>调试能力</h4><p>后端代码在服务器环境运行，对调试能力要求较高。这是后端开发中最具挑战性的环节之一，一个小问题排查数小时是常态，请务必培养耐心。</p>\n<ul>\n<li>掌握服务端日志的查看与分析，能快速定位错误信息。</li>\n<li>学习使用断点调试工具，深入跟踪代码执行流程与变量状态。</li>\n<li>学习使用使用 <strong>Postman</strong> 或 <strong>Apifox</strong> 对接口进行独立测试与问题排查。</li>\n</ul>\n<h2 id=\"三、作业检验\"><a href=\"#三、作业检验\" class=\"headerlink\" title=\"三、作业检验\"></a>三、作业检验</h2><p>题目不限，形式不限。允许在其他参赛作品基础上实现。依然分为前端方向与后端方向，参照选择方向中的要求完成。</p>\n<p><strong>允许使用 AI 辅助完成作业，但请务必理解你所使用的技术栈和代码！如果你的半数以上的代码是通过 AI 或 AI 编程助手完成的，请在项目根目录下创建一个名为 <code>chat.md</code> 的文档，并节选部分你与 AI 的对话（要求数目约 15 条）。</strong></p>\n<p><em>对于 Prompt 优化，可参考本人博客<a href=\"https://proselytecoding.github.io/post/prompt-learning-notes\">Prompt优化学习笔记</a>。</em></p>\n<h3 id=\"1-前端方向要求\"><a href=\"#1-前端方向要求\" class=\"headerlink\" title=\"1. 前端方向要求\"></a>1. 前端方向要求</h3><p>基础要求：</p>\n<ul>\n<li>应用你学到的性能优化方案，实现对于图标、图片/视频等资源的优化，量化优化效果（重点）。</li>\n<li>实现一个封装的 Axios 请求模块，要求支持请求拦截、响应拦截、错误处理等功能。</li>\n<li>如有登录需求则实现身份认证，要求使用 JWT，并封装保卫路由组件；如没有则需要详细解释相关原理。</li>\n<li>使用全局状态管理库（如 Redux/Zustand 等）及 React 内置状态管理方法（如 useContext、useReducer 等）管理应用状态。</li>\n<li>说明数据库设计思路、后端路由设计思路及使用的中间件等实现。</li>\n<li>说明 API 设计思路并编写一个规范的 API 文档。</li>\n</ul>\n<p>进阶要求：</p>\n<ul>\n<li>实现响应式设计，要求使用合适的尺寸单位，并能在不同屏幕尺寸下良好展示。</li>\n<li>在微信小程序端/手机移动端(APP)/桌面端实现项目</li>\n</ul>\n<h3 id=\"2-后端方向要求\"><a href=\"#2-后端方向要求\" class=\"headerlink\" title=\"2. 后端方向要求\"></a>2. 后端方向要求</h3><p>基础要求：</p>\n<ul>\n<li>提供清晰的 API 文档：确保前端开发者可以不询问你就能调用接口。</li>\n<li>实现完整的用户认证系统，包括注册、登录（使用 JWT）、密码加密。</li>\n<li>实现至少一个核心资源的完整 CRUD：设计合理的数据库表，并通过 API 提供增、删、改、查功能。</li>\n<li>对所有输入的请求参数进行有效性校验，并返回统一、友好的错误信息格式。</li>\n</ul>\n<p>进阶要求：</p>\n<ul>\n<li>为列表接口实现分页、排序或条件过滤。</li>\n<li>实现文件上传：支持图片等文件上传，并能返回访问地址。可以考虑将文件存储在本地、云存储或图床。</li>\n<li>编写清晰的 README：在项目根目录提供说明文档，指导他人如何安装依赖、配置环境变量和运行项目。</li>\n<li>尝试容器化与部署：使用 Docker 将应用容器化，并尝试在服务器部署你的项目。</li>\n</ul>\n","text":"OurEDA 24级 Web 方向学习指导一、前言与总结上次的答辩完成度都比较高，但是对于项目细节的理解都远远不够（无论是前端还是后端）。典型例子就是“你为什么...","permalink":"/post/oureda-24-web-guide","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"工作","slug":"工作","count":8,"path":"api/categories/工作.json"}],"tags":[{"name":"OurEDA","slug":"OurEDA","count":1,"path":"api/tags/OurEDA.json"},{"name":"Web","slug":"Web","count":2,"path":"api/tags/Web.json"},{"name":"学习指导","slug":"学习指导","count":1,"path":"api/tags/学习指导.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#OurEDA-24%E7%BA%A7-Web-%E6%96%B9%E5%90%91%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%AF%BC\"><span class=\"toc-text\">OurEDA 24级 Web 方向学习指导</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%89%8D%E8%A8%80%E4%B8%8E%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">一、前言与总结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%90%91\"><span class=\"toc-text\">二、学习方向</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%89%8D%E7%AB%AF\"><span class=\"toc-text\">1. 前端</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81\"><span class=\"toc-text\">身份认证</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">性能优化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">状态管理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B0%81%E8%A3%85%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">封装设计</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E5%BC%8F%E4%B8%8E%E5%A4%9A%E7%AB%AF\"><span class=\"toc-text\">响应式与多端</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Node-js\"><span class=\"toc-text\">Node.js</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%90%8E%E7%AB%AF\"><span class=\"toc-text\">2. 后端</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">基础概念理解</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">数据库基础</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A1%86%E6%9E%B6%E4%B8%8E%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">服务器框架与开发</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">接口设计与实现</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">安全基础</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E8%AF%95%E8%83%BD%E5%8A%9B\"><span class=\"toc-text\">调试能力</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E4%BD%9C%E4%B8%9A%E6%A3%80%E9%AA%8C\"><span class=\"toc-text\">三、作业检验</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%89%8D%E7%AB%AF%E6%96%B9%E5%90%91%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">1. 前端方向要求</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%90%8E%E7%AB%AF%E6%96%B9%E5%90%91%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">2. 后端方向要求</span></a></li></ol></li></ol></li></ol>","author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"学习资源推荐","uid":"5bc5ed974c3e283a48cd798b95da315a","slug":"resources-recommendation","date":"2025-03-06T02:00:27.000Z","updated":"2025-09-13T11:24:59.145Z","comments":true,"path":"api/articles/resources-recommendation.json","keywords":null,"cover":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/resources-recommendation/cover.jpg","text":"一、网站1.工具 PPT模板素材 第一PPT 图标素材 阿里iconfont readme中文模板 shaojintian/Best_README_templa...","permalink":"/post/resources-recommendation","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"工作","slug":"工作","count":8,"path":"api/categories/工作.json"}],"tags":[{"name":"技术","slug":"技术","count":19,"path":"api/tags/技术.json"},{"name":"推荐","slug":"推荐","count":1,"path":"api/tags/推荐.json"}],"author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"力扣周记-4","uid":"29ce0c84bae936ed46a856aec05cb9ef","slug":"leetcode-weekly-journal-4","date":"2025-09-23T14:39:40.000Z","updated":"2025-10-02T02:21:44.688Z","comments":true,"path":"api/articles/leetcode-weekly-journal-4.json","keywords":null,"cover":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/cover-leetcode.png","text":"力扣周记-42025.9.29 - 2025.10.5 一、回文链表(234)标签 栈 递归 链表 双指针 题目描述我的答案123456789101112131...","permalink":"/post/leetcode-weekly-journal-4","photos":[],"count_time":{"symbolsCount":"9.9k","symbolsTime":"9 mins."},"categories":[{"name":"算法题","slug":"算法题","count":4,"path":"api/categories/算法题.json"}],"tags":[{"name":"笔记","slug":"笔记","count":15,"path":"api/tags/笔记.json"},{"name":"力扣","slug":"力扣","count":4,"path":"api/tags/力扣.json"},{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"author":{"name":"Proselyte","slug":"blog-author","avatar":"https://raw.githubusercontent.com/ProselyteCoding/online-assets/main/blog/avatar.jpg","link":"/","description":"衷于创造，向往自由。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}